/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul,
ol {
  padding: 0;
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

a {
  text-decoration: none;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *,
*::before,
*::after {
    -webkit-animation-duration: 0.01ms !important;
            animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
            animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/*
  The following two functions are used to convert pixel values to rem and em values.
  Only intended to be used in instances where designs call for very specific px values that are non-standard.
  Please use rem and em values by default where possible without using this as a conversion tool.
*/
/*
  Generates a media query according to either a breakpoint or a numerical unit.
  Checks the breakpoints map.
  Checks if the numerical value has a valid unit attached to it.
  Converts all px values entered to em values.
*/
body {
  color: hsl(227deg, 10%, 46%);
  font-family: "Kumbh Sans", sans-serif;
  font-weight: 400;
  font-size: 1rem;
}

h1,
.social-stat {
  text-align: center;
  color: hsl(229deg, 23%, 23%);
  font-size: 1.5rem;
  font-weight: 700;
}

.card__age {
  font-size: 1.5rem;
}

.social-text {
  text-align: center;
  font-size: 0.825rem;
}

body {
  display: grid;
  place-items: center;
  background-color: hsl(185deg, 75%, 39%);
  background-image: url(../../images/bg-pattern-top.svg), url(../../images/bg-pattern-bottom.svg);
  background-position: bottom 15em right 15em, top 15em left 15em;
  background-repeat: no-repeat;
}

.card {
  display: grid;
  row-gap: 1.5rem;
  background-color: hsl(0deg, 0%, 100%);
  background-image: url(../../images/bg-pattern-card.svg);
  background-repeat: no-repeat;
  width: min(100% - 3rem, 350px);
  border-radius: 1rem;
  padding-bottom: 1.5rem;
  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px, rgba(0, 0, 0, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;
}
.card img {
  border-radius: 4rem;
  outline: 6px solid white;
  margin-inline: auto;
  margin-top: 5em;
}
.card__main-info {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}
.card__location {
  text-align: center;
  margin-top: -1rem;
}

hr {
  border: 1px solid hsl(0deg, 0%, 59%);
  width: 100%;
}

.social-info {
  display: flex;
  justify-content: space-around;
}
.social-info__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.clr-primary-cyan {
  color: hsl(185deg, 75%, 39%);
}

.bg-primary-cyan {
  background-color: hsl(185deg, 75%, 39%);
}

.clr-primary-blue-400 {
  color: hsl(227deg, 10%, 46%);
}

.bg-primary-blue-400 {
  background-color: hsl(227deg, 10%, 46%);
}

.clr-primary-blue-600 {
  color: hsl(229deg, 23%, 23%);
}

.bg-primary-blue-600 {
  background-color: hsl(229deg, 23%, 23%);
}

.clr-neutral-100 {
  color: hsl(0deg, 0%, 100%);
}

.bg-neutral-100 {
  background-color: hsl(0deg, 0%, 100%);
}

.clr-neutral-200 {
  color: hsl(0deg, 0%, 59%);
}

.bg-neutral-200 {
  background-color: hsl(0deg, 0%, 59%);
}/*# sourceMappingURL=style.css.map */